//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cobiax.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CobiaxDb : DbContext
    {
        public CobiaxDb()
            : base("name=CobiaxDb")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<ContactU> ContactUs { get; set; }
        public virtual DbSet<ContentPage> ContentPages { get; set; }
        public virtual DbSet<MainSlider> MainSliders { get; set; }
        public virtual DbSet<Page> Pages { get; set; }
        public virtual DbSet<Project> Projects { get; set; }
        public virtual DbSet<Service> Services { get; set; }
        public virtual DbSet<SocialNetwork> SocialNetworks { get; set; }
    
        public virtual ObjectResult<Nullable<int>> Sp_findoneproject(Nullable<int> i)
        {
            var iParameter = i.HasValue ?
                new ObjectParameter("i", i) :
                new ObjectParameter("i", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_findoneproject", iParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_findoneservice(Nullable<int> i)
        {
            var iParameter = i.HasValue ?
                new ObjectParameter("i", i) :
                new ObjectParameter("i", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_findoneservice", iParameter);
        }
    
        public virtual ObjectResult<Sp_ReadContactUs_Result> Sp_ReadContactUs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ReadContactUs_Result>("Sp_ReadContactUs");
        }
    
        public virtual ObjectResult<Sp_ReadPage_Result> Sp_ReadPage(Nullable<int> i)
        {
            var iParameter = i.HasValue ?
                new ObjectParameter("i", i) :
                new ObjectParameter("i", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ReadPage_Result>("Sp_ReadPage", iParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_readPageOne(Nullable<int> i)
        {
            var iParameter = i.HasValue ?
                new ObjectParameter("i", i) :
                new ObjectParameter("i", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_readPageOne", iParameter);
        }
    
        public virtual ObjectResult<Sp_ReadProject_Result> Sp_ReadProject()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ReadProject_Result>("Sp_ReadProject");
        }
    
        public virtual ObjectResult<Sp_ReadProjectone_Result> Sp_ReadProjectone(Nullable<int> i)
        {
            var iParameter = i.HasValue ?
                new ObjectParameter("i", i) :
                new ObjectParameter("i", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ReadProjectone_Result>("Sp_ReadProjectone", iParameter);
        }
    
        public virtual ObjectResult<Sp_Readservices_Result> Sp_Readservices()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Readservices_Result>("Sp_Readservices");
        }
    
        public virtual ObjectResult<Sp_Readservicesone_Result> Sp_Readservicesone(Nullable<int> i)
        {
            var iParameter = i.HasValue ?
                new ObjectParameter("i", i) :
                new ObjectParameter("i", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Readservicesone_Result>("Sp_Readservicesone", iParameter);
        }
    
        public virtual ObjectResult<Sp_ReadSlider_Result> Sp_ReadSlider()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ReadSlider_Result>("Sp_ReadSlider");
        }
    
        public virtual ObjectResult<Sp_SelectOnePage_Result> Sp_SelectOnePage(Nullable<int> i)
        {
            var iParameter = i.HasValue ?
                new ObjectParameter("i", i) :
                new ObjectParameter("i", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_SelectOnePage_Result>("Sp_SelectOnePage", iParameter);
        }
    
        public virtual ObjectResult<sp_ShowSlider_Result> sp_ShowSlider()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ShowSlider_Result>("sp_ShowSlider");
        }
    
        public virtual int Sp_UpdateOnePage(Nullable<int> i, string txt)
        {
            var iParameter = i.HasValue ?
                new ObjectParameter("i", i) :
                new ObjectParameter("i", typeof(int));
    
            var txtParameter = txt != null ?
                new ObjectParameter("txt", txt) :
                new ObjectParameter("txt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_UpdateOnePage", iParameter, txtParameter);
        }
    }
}
